{"version":3,"sources":["webpack://Carafe/webpack/bootstrap","webpack://Carafe/./src/app/Carafe.js","webpack://Carafe/./src/lib/Carafe.js","webpack://Carafe/./node_modules/es6-promise/auto.js","webpack://Carafe/./node_modules/es6-promise/dist/es6-promise.js","webpack://Carafe/./node_modules/process/browser.js","webpack://Carafe/(webpack)/buildin/global.js","webpack://Carafe/./node_modules/headjs/dist/1.0.0/head.load.js","webpack://Carafe/./node_modules/fm-webviewer-bridge/dist/fm-webviewer-bridge.umd.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_Carafe","instance","Carafe","fmBridge","_classCallCheck","this","_version","_jsonData","_metaData","cdns","css","js","_fmBridge","_useStandardDataLoading","data","array","callback","_this","Promise","resolve","reject","isStandardDataLoading","undefined","fetchLocalFileResources","then","loadResources","head","ready","getData","catch","console","debug","metaData","getMetaData","load","_this2","dataRequest","getJsonFromUrl","response","setData","configRequest","setMetaData","all","url","fetch","resp","text","json","polyfill","process","global","factory","isFunction","x","isArray","Array","toString","len","vertxNext","customSchedulerFn","asap","arg","queue","flush","scheduleFlush","browserWindow","window","browserGlobal","BrowserMutationObserver","MutationObserver","WebKitMutationObserver","isNode","self","isWorker","Uint8ClampedArray","importScripts","MessageChannel","useSetTimeout","globalSetTimeout","setTimeout","channel","iterations","observer","node","onFulfillment","onRejection","parent","child","constructor","noop","PROMISE_ID","makePromise","_state","arguments","invokeCallback","_result","subscribe","resolve$1","promise","nextTick","document","createTextNode","observe","characterData","port1","onmessage","port2","postMessage","vertx","Function","require","runOnLoop","runOnContext","e","attemptVertx","Math","random","substring","PENDING","FULFILLED","REJECTED","TRY_CATCH_ERROR","error","getThen","handleMaybeThenable","maybeThenable","then$$1","thenable","fulfill","reason","handleOwnThenable","sealed","fulfillmentHandler","rejectionHandler","tryThen","_label","handleForeignThenable","type","TypeError","publishRejection","_onerror","publish","_subscribers","length","subscribers","settled","detail","hasCallback","succeeded","failed","tryCatch","id","Enumerator","Constructor","input","_instanceConstructor","_remaining","_enumerate","Error","_eachEntry","entry","resolve$$1","_then","_settledAt","Promise$1","_willSettleAt","state","enumerator","resolver","needsResolver","initializePromise","needsNew","finally","entries","race","_","_setScheduler","scheduleFn","_setAsap","asapFn","_asap","local","P","promiseToString","cast","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","run","marker","runClearTimeout","Item","args","push","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","g","win","isDomReady","doc","domWaiters","handlers","assets","isAsync","createElement","documentElement","style","opera","headVar","head_conf","api","PRELOADING","PRELOADED","LOADING","LOADED","each","arr","slice","is","obj","clas","item","one","_done","getAsset","items","asset","label","split","indexOf","existing","allLoaded","preLoad","onpreload","loadAsset","afterPreload","onPreload","fn","ALL","event","ele","onload","onreadystatechange","onerror","test","readyState","documentMode","errorTimeout","cssTimeout","toLowerCase","rel","href","cssRetries","isCssLoaded","styleSheets","src","async","defer","getElementsByTagName","insertBefore","lastChild","domReady","body","readyTimeout","dataMain","getAttribute","init","domContentLoaded","addEventListener","removeEventListener","detachEvent","attachEvent","top","frameElement","doScroll","doScrollCheck","rest","next","success","failure","passed","feature","assign","target","firstSource","arguments$1","to","nextSource","keysArray","keys","nextIndex","nextKey","desc","getOwnPropertyDescriptor","es6ObjectAssign_2","configurable","writable","clipboardData","message","source","lineno","colno","errorDiv","innerHTML","appendChild","messageP","sourceP","ul","line","col","setAttribute","initialProps","props","decodeURIComponent","location","hash","substr","JSON","parse","log","callFMScript","fileName","scriptName","parameter","encodeURIComponent","a","display","click","parentNode","removeChild","externalAPI","methods","apiListener","join","functionName","function","result","file","script","errorCode","descriptor","handleResult","String","stringify","addMethods","start","stop"],"mappings":"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","file":"Carafe.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\"use strict\";\n\nimport Carafe from '../lib/Carafe';\nconst instance = new Carafe();\nmodule.exports = instance;\n","\"use strict\";\n\nimport \"es6-promise/auto\";\nimport 'headjs/dist/1.0.0/head.load';\nimport * as fmBridge from 'fm-webviewer-bridge'\n\nexport default class Carafe {\n    /**\n     * Provides loader, bundler, access to FMBridge.\n     * @returns {Carafe}\n     */\n    constructor() {\n        this._version = '0.7.1';\n        this._jsonData = {};\n        this._metaData = {\n            \"cdns\": {\n                \"css\": [],\n                \"js\": []\n            }\n        };\n        this._fmBridge = fmBridge;\n        this._useStandardDataLoading = true;\n\n        return this;\n    }\n\n    /**\n     * @param data\n     */\n    setData(data) {\n        this._jsonData = data;\n    }\n\n    /**\n     * @param data\n     */\n    setMetaData(data) {\n        this._metaData = data;\n    }\n\n    /**\n     * @param array\n     */\n    setCssCdnArray(array) {\n        this._metaData.cdns.css = array;\n    }\n\n    /**\n     * @param array\n     */\n    setJsCdnArray(array) {\n        this._metaData.cdns.js = array;\n    }\n\n    /**\n     * Tell carafe that the implementation will be run in a webviewer.\n     * This is used to stop the loading of local resources used for dev/CodeSandbox.\n     */\n    setIsStandardDataLoading() {\n        this._useStandardDataLoading = true;\n    }\n\n    setLocalResourceDataLoading() {\n        this._useStandardDataLoading = false;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isStandardDataLoading() {\n        return this._useStandardDataLoading;\n    }\n\n    /**\n     * @returns {{}|*}\n     */\n    getData() {\n        return this._jsonData;\n    }\n\n    /**\n     * @returns {{}|*}\n     */\n    getMetaData() {\n        return this._metaData;\n    }\n\n    /**\n     * @returns {*}\n     */\n    getFMBridge() {\n        return this._fmBridge;\n    }\n\n    /**\n     * Fetch local file resources if configured.\n     * Load CDN resources.\n     * Call the user callback.\n     * @param callback\n     */\n    ready(callback) {\n        new Promise((resolve, reject) => {\n            // fetch example json if needed\n            resolve(this.isStandardDataLoading() ? undefined : this.fetchLocalFileResources());\n        }).then(() => {\n            // load CDN resources\n            return this.loadResources();\n        }).then(() => {\n            head.ready(() => {\n                callback(this.getData());\n            });\n        }).catch(function () {\n            console.debug('error fetching metaData from configData');\n        });\n    }\n\n    /**\n     * load CDN urls from the metaData into the head loader\n     */\n    loadResources() {\n        const metaData = this.getMetaData();\n\n        if (undefined !== metaData.cdns) {\n            if (undefined !== metaData.cdns.css) {\n                head.load(metaData.cdns.css);\n            }\n\n            if (undefined !== metaData.cdns.js) {\n                head.js(metaData.cdns.js);\n            }\n        }\n    }\n\n    /**\n     * Fetch sparse bundle files for development.\n     * @returns {Promise<[any]>}\n     */\n    fetchLocalFileResources() {\n        const dataRequest = this.getJsonFromUrl('./data.json')\n            .then((response) => {\n                this.setData(response);\n            });\n\n        const configRequest = this.getJsonFromUrl('./config.json')\n            .then((response) => {\n                if (undefined !== response.metaData) {\n                    this.setMetaData(response.metaData);\n                }\n            });\n\n        return Promise.all([dataRequest, configRequest])\n            .catch(function () {\n                console.debug('error fetching local file data.json or config.json');\n            });\n    }\n\n    /**\n     * Fetch url and convert to text.\n     * @param url\n     * @returns {Promise<string>}\n     */\n    getTextFromUrl(url) {\n        return fetch(url)\n            .then((resp) => resp.text())\n            .catch(function () {\n                console.debug('error fetching metaData from builtJs');\n            });\n    }\n\n    /**\n     * Fetch url and convert to JSON\n     * @param url\n     * @returns {Promise<any>}\n     */\n    getJsonFromUrl(url) {\n        return fetch(url)\n            .then((resp) => resp.json())\n            .catch(function () {\n                console.debug('error fetching json from ' + url);\n            });\n    }\n}\n","// This file can be required in Browserify and Node.js for automatic polyfill\n// To use it:  require('es6-promise/auto');\n'use strict';\nmodule.exports = require('./').polyfill();\n","/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE\n * @version   v4.2.6+9869a4bc\n */\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.ES6Promise = factory());\n}(this, (function () { 'use strict';\n\nfunction objectOrFunction(x) {\n  var type = typeof x;\n  return x !== null && (type === 'object' || type === 'function');\n}\n\nfunction isFunction(x) {\n  return typeof x === 'function';\n}\n\n\n\nvar _isArray = void 0;\nif (Array.isArray) {\n  _isArray = Array.isArray;\n} else {\n  _isArray = function (x) {\n    return Object.prototype.toString.call(x) === '[object Array]';\n  };\n}\n\nvar isArray = _isArray;\n\nvar len = 0;\nvar vertxNext = void 0;\nvar customSchedulerFn = void 0;\n\nvar asap = function asap(callback, arg) {\n  queue[len] = callback;\n  queue[len + 1] = arg;\n  len += 2;\n  if (len === 2) {\n    // If len is 2, that means that we need to schedule an async flush.\n    // If additional callbacks are queued before the queue is flushed, they\n    // will be processed by this flush that we are scheduling.\n    if (customSchedulerFn) {\n      customSchedulerFn(flush);\n    } else {\n      scheduleFlush();\n    }\n  }\n};\n\nfunction setScheduler(scheduleFn) {\n  customSchedulerFn = scheduleFn;\n}\n\nfunction setAsap(asapFn) {\n  asap = asapFn;\n}\n\nvar browserWindow = typeof window !== 'undefined' ? window : undefined;\nvar browserGlobal = browserWindow || {};\nvar BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\nvar isNode = typeof self === 'undefined' && typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\n// test for web worker but not in IE10\nvar isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\n// node\nfunction useNextTick() {\n  // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n  // see https://github.com/cujojs/when/issues/410 for details\n  return function () {\n    return process.nextTick(flush);\n  };\n}\n\n// vertx\nfunction useVertxTimer() {\n  if (typeof vertxNext !== 'undefined') {\n    return function () {\n      vertxNext(flush);\n    };\n  }\n\n  return useSetTimeout();\n}\n\nfunction useMutationObserver() {\n  var iterations = 0;\n  var observer = new BrowserMutationObserver(flush);\n  var node = document.createTextNode('');\n  observer.observe(node, { characterData: true });\n\n  return function () {\n    node.data = iterations = ++iterations % 2;\n  };\n}\n\n// web worker\nfunction useMessageChannel() {\n  var channel = new MessageChannel();\n  channel.port1.onmessage = flush;\n  return function () {\n    return channel.port2.postMessage(0);\n  };\n}\n\nfunction useSetTimeout() {\n  // Store setTimeout reference so es6-promise will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var globalSetTimeout = setTimeout;\n  return function () {\n    return globalSetTimeout(flush, 1);\n  };\n}\n\nvar queue = new Array(1000);\nfunction flush() {\n  for (var i = 0; i < len; i += 2) {\n    var callback = queue[i];\n    var arg = queue[i + 1];\n\n    callback(arg);\n\n    queue[i] = undefined;\n    queue[i + 1] = undefined;\n  }\n\n  len = 0;\n}\n\nfunction attemptVertx() {\n  try {\n    var vertx = Function('return this')().require('vertx');\n    vertxNext = vertx.runOnLoop || vertx.runOnContext;\n    return useVertxTimer();\n  } catch (e) {\n    return useSetTimeout();\n  }\n}\n\nvar scheduleFlush = void 0;\n// Decide what async method to use to triggering processing of queued callbacks:\nif (isNode) {\n  scheduleFlush = useNextTick();\n} else if (BrowserMutationObserver) {\n  scheduleFlush = useMutationObserver();\n} else if (isWorker) {\n  scheduleFlush = useMessageChannel();\n} else if (browserWindow === undefined && typeof require === 'function') {\n  scheduleFlush = attemptVertx();\n} else {\n  scheduleFlush = useSetTimeout();\n}\n\nfunction then(onFulfillment, onRejection) {\n  var parent = this;\n\n  var child = new this.constructor(noop);\n\n  if (child[PROMISE_ID] === undefined) {\n    makePromise(child);\n  }\n\n  var _state = parent._state;\n\n\n  if (_state) {\n    var callback = arguments[_state - 1];\n    asap(function () {\n      return invokeCallback(_state, child, callback, parent._result);\n    });\n  } else {\n    subscribe(parent, child, onFulfillment, onRejection);\n  }\n\n  return child;\n}\n\n/**\n  `Promise.resolve` returns a promise that will become resolved with the\n  passed `value`. It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    resolve(1);\n  });\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.resolve(1);\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  @method resolve\n  @static\n  @param {Any} value value that the returned promise will be resolved with\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\nfunction resolve$1(object) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (object && typeof object === 'object' && object.constructor === Constructor) {\n    return object;\n  }\n\n  var promise = new Constructor(noop);\n  resolve(promise, object);\n  return promise;\n}\n\nvar PROMISE_ID = Math.random().toString(36).substring(2);\n\nfunction noop() {}\n\nvar PENDING = void 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\n\nvar TRY_CATCH_ERROR = { error: null };\n\nfunction selfFulfillment() {\n  return new TypeError(\"You cannot resolve a promise with itself\");\n}\n\nfunction cannotReturnOwn() {\n  return new TypeError('A promises callback cannot return that same promise.');\n}\n\nfunction getThen(promise) {\n  try {\n    return promise.then;\n  } catch (error) {\n    TRY_CATCH_ERROR.error = error;\n    return TRY_CATCH_ERROR;\n  }\n}\n\nfunction tryThen(then$$1, value, fulfillmentHandler, rejectionHandler) {\n  try {\n    then$$1.call(value, fulfillmentHandler, rejectionHandler);\n  } catch (e) {\n    return e;\n  }\n}\n\nfunction handleForeignThenable(promise, thenable, then$$1) {\n  asap(function (promise) {\n    var sealed = false;\n    var error = tryThen(then$$1, thenable, function (value) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n      if (thenable !== value) {\n        resolve(promise, value);\n      } else {\n        fulfill(promise, value);\n      }\n    }, function (reason) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n\n      reject(promise, reason);\n    }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n    if (!sealed && error) {\n      sealed = true;\n      reject(promise, error);\n    }\n  }, promise);\n}\n\nfunction handleOwnThenable(promise, thenable) {\n  if (thenable._state === FULFILLED) {\n    fulfill(promise, thenable._result);\n  } else if (thenable._state === REJECTED) {\n    reject(promise, thenable._result);\n  } else {\n    subscribe(thenable, undefined, function (value) {\n      return resolve(promise, value);\n    }, function (reason) {\n      return reject(promise, reason);\n    });\n  }\n}\n\nfunction handleMaybeThenable(promise, maybeThenable, then$$1) {\n  if (maybeThenable.constructor === promise.constructor && then$$1 === then && maybeThenable.constructor.resolve === resolve$1) {\n    handleOwnThenable(promise, maybeThenable);\n  } else {\n    if (then$$1 === TRY_CATCH_ERROR) {\n      reject(promise, TRY_CATCH_ERROR.error);\n      TRY_CATCH_ERROR.error = null;\n    } else if (then$$1 === undefined) {\n      fulfill(promise, maybeThenable);\n    } else if (isFunction(then$$1)) {\n      handleForeignThenable(promise, maybeThenable, then$$1);\n    } else {\n      fulfill(promise, maybeThenable);\n    }\n  }\n}\n\nfunction resolve(promise, value) {\n  if (promise === value) {\n    reject(promise, selfFulfillment());\n  } else if (objectOrFunction(value)) {\n    handleMaybeThenable(promise, value, getThen(value));\n  } else {\n    fulfill(promise, value);\n  }\n}\n\nfunction publishRejection(promise) {\n  if (promise._onerror) {\n    promise._onerror(promise._result);\n  }\n\n  publish(promise);\n}\n\nfunction fulfill(promise, value) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n\n  promise._result = value;\n  promise._state = FULFILLED;\n\n  if (promise._subscribers.length !== 0) {\n    asap(publish, promise);\n  }\n}\n\nfunction reject(promise, reason) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n  promise._state = REJECTED;\n  promise._result = reason;\n\n  asap(publishRejection, promise);\n}\n\nfunction subscribe(parent, child, onFulfillment, onRejection) {\n  var _subscribers = parent._subscribers;\n  var length = _subscribers.length;\n\n\n  parent._onerror = null;\n\n  _subscribers[length] = child;\n  _subscribers[length + FULFILLED] = onFulfillment;\n  _subscribers[length + REJECTED] = onRejection;\n\n  if (length === 0 && parent._state) {\n    asap(publish, parent);\n  }\n}\n\nfunction publish(promise) {\n  var subscribers = promise._subscribers;\n  var settled = promise._state;\n\n  if (subscribers.length === 0) {\n    return;\n  }\n\n  var child = void 0,\n      callback = void 0,\n      detail = promise._result;\n\n  for (var i = 0; i < subscribers.length; i += 3) {\n    child = subscribers[i];\n    callback = subscribers[i + settled];\n\n    if (child) {\n      invokeCallback(settled, child, callback, detail);\n    } else {\n      callback(detail);\n    }\n  }\n\n  promise._subscribers.length = 0;\n}\n\nfunction tryCatch(callback, detail) {\n  try {\n    return callback(detail);\n  } catch (e) {\n    TRY_CATCH_ERROR.error = e;\n    return TRY_CATCH_ERROR;\n  }\n}\n\nfunction invokeCallback(settled, promise, callback, detail) {\n  var hasCallback = isFunction(callback),\n      value = void 0,\n      error = void 0,\n      succeeded = void 0,\n      failed = void 0;\n\n  if (hasCallback) {\n    value = tryCatch(callback, detail);\n\n    if (value === TRY_CATCH_ERROR) {\n      failed = true;\n      error = value.error;\n      value.error = null;\n    } else {\n      succeeded = true;\n    }\n\n    if (promise === value) {\n      reject(promise, cannotReturnOwn());\n      return;\n    }\n  } else {\n    value = detail;\n    succeeded = true;\n  }\n\n  if (promise._state !== PENDING) {\n    // noop\n  } else if (hasCallback && succeeded) {\n    resolve(promise, value);\n  } else if (failed) {\n    reject(promise, error);\n  } else if (settled === FULFILLED) {\n    fulfill(promise, value);\n  } else if (settled === REJECTED) {\n    reject(promise, value);\n  }\n}\n\nfunction initializePromise(promise, resolver) {\n  try {\n    resolver(function resolvePromise(value) {\n      resolve(promise, value);\n    }, function rejectPromise(reason) {\n      reject(promise, reason);\n    });\n  } catch (e) {\n    reject(promise, e);\n  }\n}\n\nvar id = 0;\nfunction nextId() {\n  return id++;\n}\n\nfunction makePromise(promise) {\n  promise[PROMISE_ID] = id++;\n  promise._state = undefined;\n  promise._result = undefined;\n  promise._subscribers = [];\n}\n\nfunction validationError() {\n  return new Error('Array Methods must be provided an Array');\n}\n\nvar Enumerator = function () {\n  function Enumerator(Constructor, input) {\n    this._instanceConstructor = Constructor;\n    this.promise = new Constructor(noop);\n\n    if (!this.promise[PROMISE_ID]) {\n      makePromise(this.promise);\n    }\n\n    if (isArray(input)) {\n      this.length = input.length;\n      this._remaining = input.length;\n\n      this._result = new Array(this.length);\n\n      if (this.length === 0) {\n        fulfill(this.promise, this._result);\n      } else {\n        this.length = this.length || 0;\n        this._enumerate(input);\n        if (this._remaining === 0) {\n          fulfill(this.promise, this._result);\n        }\n      }\n    } else {\n      reject(this.promise, validationError());\n    }\n  }\n\n  Enumerator.prototype._enumerate = function _enumerate(input) {\n    for (var i = 0; this._state === PENDING && i < input.length; i++) {\n      this._eachEntry(input[i], i);\n    }\n  };\n\n  Enumerator.prototype._eachEntry = function _eachEntry(entry, i) {\n    var c = this._instanceConstructor;\n    var resolve$$1 = c.resolve;\n\n\n    if (resolve$$1 === resolve$1) {\n      var _then = getThen(entry);\n\n      if (_then === then && entry._state !== PENDING) {\n        this._settledAt(entry._state, i, entry._result);\n      } else if (typeof _then !== 'function') {\n        this._remaining--;\n        this._result[i] = entry;\n      } else if (c === Promise$1) {\n        var promise = new c(noop);\n        handleMaybeThenable(promise, entry, _then);\n        this._willSettleAt(promise, i);\n      } else {\n        this._willSettleAt(new c(function (resolve$$1) {\n          return resolve$$1(entry);\n        }), i);\n      }\n    } else {\n      this._willSettleAt(resolve$$1(entry), i);\n    }\n  };\n\n  Enumerator.prototype._settledAt = function _settledAt(state, i, value) {\n    var promise = this.promise;\n\n\n    if (promise._state === PENDING) {\n      this._remaining--;\n\n      if (state === REJECTED) {\n        reject(promise, value);\n      } else {\n        this._result[i] = value;\n      }\n    }\n\n    if (this._remaining === 0) {\n      fulfill(promise, this._result);\n    }\n  };\n\n  Enumerator.prototype._willSettleAt = function _willSettleAt(promise, i) {\n    var enumerator = this;\n\n    subscribe(promise, undefined, function (value) {\n      return enumerator._settledAt(FULFILLED, i, value);\n    }, function (reason) {\n      return enumerator._settledAt(REJECTED, i, reason);\n    });\n  };\n\n  return Enumerator;\n}();\n\n/**\n  `Promise.all` accepts an array of promises, and returns a new promise which\n  is fulfilled with an array of fulfillment values for the passed promises, or\n  rejected with the reason of the first passed promise to be rejected. It casts all\n  elements of the passed iterable to promises as it runs this algorithm.\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = resolve(2);\n  let promise3 = resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // The array here would be [ 1, 2, 3 ];\n  });\n  ```\n\n  If any of the `promises` given to `all` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promises's\n  rejection handler. For example:\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = reject(new Error(\"2\"));\n  let promise3 = reject(new Error(\"3\"));\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(error) {\n    // error.message === \"2\"\n  });\n  ```\n\n  @method all\n  @static\n  @param {Array} entries array of promises\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when all `promises` have been\n  fulfilled, or rejected if any of them become rejected.\n  @static\n*/\nfunction all(entries) {\n  return new Enumerator(this, entries).promise;\n}\n\n/**\n  `Promise.race` returns a new promise which is settled in the same way as the\n  first passed promise to settle.\n\n  Example:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 2');\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // result === 'promise 2' because it was resolved before promise1\n    // was resolved.\n  });\n  ```\n\n  `Promise.race` is deterministic in that only the state of the first\n  settled promise matters. For example, even if other promises given to the\n  `promises` array argument are resolved, but the first settled promise has\n  become rejected before the other promises became fulfilled, the returned\n  promise will become rejected:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      reject(new Error('promise 2'));\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // Code here never runs\n  }, function(reason){\n    // reason.message === 'promise 2' because promise 2 became rejected before\n    // promise 1 became fulfilled\n  });\n  ```\n\n  An example real-world use case is implementing timeouts:\n\n  ```javascript\n  Promise.race([ajax('foo.json'), timeout(5000)])\n  ```\n\n  @method race\n  @static\n  @param {Array} promises array of promises to observe\n  Useful for tooling.\n  @return {Promise} a promise which settles in the same way as the first passed\n  promise to settle.\n*/\nfunction race(entries) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (!isArray(entries)) {\n    return new Constructor(function (_, reject) {\n      return reject(new TypeError('You must pass an array to race.'));\n    });\n  } else {\n    return new Constructor(function (resolve, reject) {\n      var length = entries.length;\n      for (var i = 0; i < length; i++) {\n        Constructor.resolve(entries[i]).then(resolve, reject);\n      }\n    });\n  }\n}\n\n/**\n  `Promise.reject` returns a promise rejected with the passed `reason`.\n  It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    reject(new Error('WHOOPS'));\n  });\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.reject(new Error('WHOOPS'));\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  @method reject\n  @static\n  @param {Any} reason value that the returned promise will be rejected with.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/\nfunction reject$1(reason) {\n  /*jshint validthis:true */\n  var Constructor = this;\n  var promise = new Constructor(noop);\n  reject(promise, reason);\n  return promise;\n}\n\nfunction needsResolver() {\n  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n}\n\nfunction needsNew() {\n  throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n}\n\n/**\n  Promise objects represent the eventual result of an asynchronous operation. The\n  primary way of interacting with a promise is through its `then` method, which\n  registers callbacks to receive either a promise's eventual value or the reason\n  why the promise cannot be fulfilled.\n\n  Terminology\n  -----------\n\n  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n  - `thenable` is an object or function that defines a `then` method.\n  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n  - `exception` is a value that is thrown using the throw statement.\n  - `reason` is a value that indicates why a promise was rejected.\n  - `settled` the final resting state of a promise, fulfilled or rejected.\n\n  A promise can be in one of three states: pending, fulfilled, or rejected.\n\n  Promises that are fulfilled have a fulfillment value and are in the fulfilled\n  state.  Promises that are rejected have a rejection reason and are in the\n  rejected state.  A fulfillment value is never a thenable.\n\n  Promises can also be said to *resolve* a value.  If this value is also a\n  promise, then the original promise's settled state will match the value's\n  settled state.  So a promise that *resolves* a promise that rejects will\n  itself reject, and a promise that *resolves* a promise that fulfills will\n  itself fulfill.\n\n\n  Basic Usage:\n  ------------\n\n  ```js\n  let promise = new Promise(function(resolve, reject) {\n    // on success\n    resolve(value);\n\n    // on failure\n    reject(reason);\n  });\n\n  promise.then(function(value) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Advanced Usage:\n  ---------------\n\n  Promises shine when abstracting away asynchronous interactions such as\n  `XMLHttpRequest`s.\n\n  ```js\n  function getJSON(url) {\n    return new Promise(function(resolve, reject){\n      let xhr = new XMLHttpRequest();\n\n      xhr.open('GET', url);\n      xhr.onreadystatechange = handler;\n      xhr.responseType = 'json';\n      xhr.setRequestHeader('Accept', 'application/json');\n      xhr.send();\n\n      function handler() {\n        if (this.readyState === this.DONE) {\n          if (this.status === 200) {\n            resolve(this.response);\n          } else {\n            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n          }\n        }\n      };\n    });\n  }\n\n  getJSON('/posts.json').then(function(json) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Unlike callbacks, promises are great composable primitives.\n\n  ```js\n  Promise.all([\n    getJSON('/posts'),\n    getJSON('/comments')\n  ]).then(function(values){\n    values[0] // => postsJSON\n    values[1] // => commentsJSON\n\n    return values;\n  });\n  ```\n\n  @class Promise\n  @param {Function} resolver\n  Useful for tooling.\n  @constructor\n*/\n\nvar Promise$1 = function () {\n  function Promise(resolver) {\n    this[PROMISE_ID] = nextId();\n    this._result = this._state = undefined;\n    this._subscribers = [];\n\n    if (noop !== resolver) {\n      typeof resolver !== 'function' && needsResolver();\n      this instanceof Promise ? initializePromise(this, resolver) : needsNew();\n    }\n  }\n\n  /**\n  The primary way of interacting with a promise is through its `then` method,\n  which registers callbacks to receive either a promise's eventual value or the\n  reason why the promise cannot be fulfilled.\n   ```js\n  findUser().then(function(user){\n    // user is available\n  }, function(reason){\n    // user is unavailable, and you are given the reason why\n  });\n  ```\n   Chaining\n  --------\n   The return value of `then` is itself a promise.  This second, 'downstream'\n  promise is resolved with the return value of the first promise's fulfillment\n  or rejection handler, or rejected if the handler throws an exception.\n   ```js\n  findUser().then(function (user) {\n    return user.name;\n  }, function (reason) {\n    return 'default name';\n  }).then(function (userName) {\n    // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n    // will be `'default name'`\n  });\n   findUser().then(function (user) {\n    throw new Error('Found user, but still unhappy');\n  }, function (reason) {\n    throw new Error('`findUser` rejected and we're unhappy');\n  }).then(function (value) {\n    // never reached\n  }, function (reason) {\n    // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n    // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n  });\n  ```\n  If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n   ```js\n  findUser().then(function (user) {\n    throw new PedagogicalException('Upstream error');\n  }).then(function (value) {\n    // never reached\n  }).then(function (value) {\n    // never reached\n  }, function (reason) {\n    // The `PedgagocialException` is propagated all the way down to here\n  });\n  ```\n   Assimilation\n  ------------\n   Sometimes the value you want to propagate to a downstream promise can only be\n  retrieved asynchronously. This can be achieved by returning a promise in the\n  fulfillment or rejection handler. The downstream promise will then be pending\n  until the returned promise is settled. This is called *assimilation*.\n   ```js\n  findUser().then(function (user) {\n    return findCommentsByAuthor(user);\n  }).then(function (comments) {\n    // The user's comments are now available\n  });\n  ```\n   If the assimliated promise rejects, then the downstream promise will also reject.\n   ```js\n  findUser().then(function (user) {\n    return findCommentsByAuthor(user);\n  }).then(function (comments) {\n    // If `findCommentsByAuthor` fulfills, we'll have the value here\n  }, function (reason) {\n    // If `findCommentsByAuthor` rejects, we'll have the reason here\n  });\n  ```\n   Simple Example\n  --------------\n   Synchronous Example\n   ```javascript\n  let result;\n   try {\n    result = findResult();\n    // success\n  } catch(reason) {\n    // failure\n  }\n  ```\n   Errback Example\n   ```js\n  findResult(function(result, err){\n    if (err) {\n      // failure\n    } else {\n      // success\n    }\n  });\n  ```\n   Promise Example;\n   ```javascript\n  findResult().then(function(result){\n    // success\n  }, function(reason){\n    // failure\n  });\n  ```\n   Advanced Example\n  --------------\n   Synchronous Example\n   ```javascript\n  let author, books;\n   try {\n    author = findAuthor();\n    books  = findBooksByAuthor(author);\n    // success\n  } catch(reason) {\n    // failure\n  }\n  ```\n   Errback Example\n   ```js\n   function foundBooks(books) {\n   }\n   function failure(reason) {\n   }\n   findAuthor(function(author, err){\n    if (err) {\n      failure(err);\n      // failure\n    } else {\n      try {\n        findBoooksByAuthor(author, function(books, err) {\n          if (err) {\n            failure(err);\n          } else {\n            try {\n              foundBooks(books);\n            } catch(reason) {\n              failure(reason);\n            }\n          }\n        });\n      } catch(error) {\n        failure(err);\n      }\n      // success\n    }\n  });\n  ```\n   Promise Example;\n   ```javascript\n  findAuthor().\n    then(findBooksByAuthor).\n    then(function(books){\n      // found books\n  }).catch(function(reason){\n    // something went wrong\n  });\n  ```\n   @method then\n  @param {Function} onFulfilled\n  @param {Function} onRejected\n  Useful for tooling.\n  @return {Promise}\n  */\n\n  /**\n  `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n  as the catch block of a try/catch statement.\n  ```js\n  function findAuthor(){\n  throw new Error('couldn't find that author');\n  }\n  // synchronous\n  try {\n  findAuthor();\n  } catch(reason) {\n  // something went wrong\n  }\n  // async with promises\n  findAuthor().catch(function(reason){\n  // something went wrong\n  });\n  ```\n  @method catch\n  @param {Function} onRejection\n  Useful for tooling.\n  @return {Promise}\n  */\n\n\n  Promise.prototype.catch = function _catch(onRejection) {\n    return this.then(null, onRejection);\n  };\n\n  /**\n    `finally` will be invoked regardless of the promise's fate just as native\n    try/catch/finally behaves\n  \n    Synchronous example:\n  \n    ```js\n    findAuthor() {\n      if (Math.random() > 0.5) {\n        throw new Error();\n      }\n      return new Author();\n    }\n  \n    try {\n      return findAuthor(); // succeed or fail\n    } catch(error) {\n      return findOtherAuther();\n    } finally {\n      // always runs\n      // doesn't affect the return value\n    }\n    ```\n  \n    Asynchronous example:\n  \n    ```js\n    findAuthor().catch(function(reason){\n      return findOtherAuther();\n    }).finally(function(){\n      // author was either found, or not\n    });\n    ```\n  \n    @method finally\n    @param {Function} callback\n    @return {Promise}\n  */\n\n\n  Promise.prototype.finally = function _finally(callback) {\n    var promise = this;\n    var constructor = promise.constructor;\n\n    if (isFunction(callback)) {\n      return promise.then(function (value) {\n        return constructor.resolve(callback()).then(function () {\n          return value;\n        });\n      }, function (reason) {\n        return constructor.resolve(callback()).then(function () {\n          throw reason;\n        });\n      });\n    }\n\n    return promise.then(callback, callback);\n  };\n\n  return Promise;\n}();\n\nPromise$1.prototype.then = then;\nPromise$1.all = all;\nPromise$1.race = race;\nPromise$1.resolve = resolve$1;\nPromise$1.reject = reject$1;\nPromise$1._setScheduler = setScheduler;\nPromise$1._setAsap = setAsap;\nPromise$1._asap = asap;\n\n/*global self*/\nfunction polyfill() {\n  var local = void 0;\n\n  if (typeof global !== 'undefined') {\n    local = global;\n  } else if (typeof self !== 'undefined') {\n    local = self;\n  } else {\n    try {\n      local = Function('return this')();\n    } catch (e) {\n      throw new Error('polyfill failed because global object is unavailable in this environment');\n    }\n  }\n\n  var P = local.Promise;\n\n  if (P) {\n    var promiseToString = null;\n    try {\n      promiseToString = Object.prototype.toString.call(P.resolve());\n    } catch (e) {\n      // silently ignored\n    }\n\n    if (promiseToString === '[object Promise]' && !P.cast) {\n      return;\n    }\n  }\n\n  local.Promise = Promise$1;\n}\n\n// Strange compat..\nPromise$1.polyfill = polyfill;\nPromise$1.Promise = Promise$1;\n\nreturn Promise$1;\n\n})));\n\n\n\n//# sourceMappingURL=es6-promise.map\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","///#source 1 1 /src/1.0.0/load.js\n/*! head.load - v1.0.3 */\n/*\n * HeadJS     The only script in your <HEAD>\n * Author     Tero Piirainen  (tipiirai)\n * Maintainer Robert Hoffmann (itechnology)\n * License    MIT / http://bit.ly/mit-license\n * WebSite    http://headjs.com\n */\n(function (win, undefined) {\n    \"use strict\";\n\n    //#region variables\n    var doc        = win.document,\n        domWaiters = [],\n        handlers   = {}, // user functions waiting for events\n        assets     = {}, // loadable items in various states\n        isAsync    = \"async\" in doc.createElement(\"script\") || \"MozAppearance\" in doc.documentElement.style || win.opera,\n        isDomReady,\n\n        /*** public API ***/\n        headVar = win.head_conf && win.head_conf.head || \"head\",\n        api     = win[headVar] = (win[headVar] || function () { api.ready.apply(null, arguments); }),\n\n        // states\n        PRELOADING = 1,\n        PRELOADED  = 2,\n        LOADING    = 3,\n        LOADED     = 4;\n    //#endregion\n\n    //#region PRIVATE functions\n\n    //#region Helper functions\n    function noop() {\n        // does nothing\n    }\n\n    function each(arr, callback) {\n        if (!arr) {\n            return;\n        }\n\n        // arguments special type\n        if (typeof arr === \"object\") {\n            arr = [].slice.call(arr);\n        }\n\n        // do the job\n        for (var i = 0, l = arr.length; i < l; i++) {\n            callback.call(arr, arr[i], i);\n        }\n    }\n\n    /* A must read: http://bonsaiden.github.com/JavaScript-Garden\n     ************************************************************/\n    function is(type, obj) {\n        var clas = Object.prototype.toString.call(obj).slice(8, -1);\n        return obj !== undefined && obj !== null && clas === type;\n    }\n\n    function isFunction(item) {\n        return is(\"Function\", item);\n    }\n\n    function isArray(item) {\n        return is(\"Array\", item);\n    }\n\n    function toLabel(url) {\n        ///<summary>Converts a url to a file label</summary>\n        var items = url.split(\"/\"),\n             name = items[items.length - 1],\n             i    = name.indexOf(\"?\");\n\n        return i !== -1 ? name.substring(0, i) : name;\n    }\n\n    // INFO: this look like a \"im triggering callbacks all over the place, but only wanna run it one time function\" ..should try to make everything work without it if possible\n    // INFO: Even better. Look into promises/defered's like jQuery is doing\n    function one(callback) {\n        ///<summary>Execute a callback only once</summary>\n        callback = callback || noop;\n\n        if (callback._done) {\n            return;\n        }\n\n        callback();\n        callback._done = 1;\n    }\n    //#endregion\n\n    function conditional(test, success, failure, callback) {\n        ///<summary>\n        /// INFO: use cases:\n        ///    head.test(condition, null       , \"file.NOk\" , callback);\n        ///    head.test(condition, \"fileOk.js\", null       , callback);\n        ///    head.test(condition, \"fileOk.js\", \"file.NOk\" , callback);\n        ///    head.test(condition, \"fileOk.js\", [\"file.NOk\", \"file.NOk\"], callback);\n        ///    head.test({\n        ///               test    : condition,\n        ///               success : [{ label1: \"file1Ok.js\"  }, { label2: \"file2Ok.js\" }],\n        ///               failure : [{ label1: \"file1NOk.js\" }, { label2: \"file2NOk.js\" }],\n        ///               callback: callback\n        ///    );\n        ///    head.test({\n        ///               test    : condition,\n        ///               success : [\"file1Ok.js\" , \"file2Ok.js\"],\n        ///               failure : [\"file1NOk.js\", \"file2NOk.js\"],\n        ///               callback: callback\n        ///    );\n        ///</summary>\n        var obj = (typeof test === \"object\") ? test : {\n            test: test,\n            success: !!success ? isArray(success) ? success : [success] : false,\n            failure: !!failure ? isArray(failure) ? failure : [failure] : false,\n            callback: callback || noop\n        };\n\n        // Test Passed ?\n        var passed = !!obj.test;\n\n        // Do we have a success case\n        if (passed && !!obj.success) {\n            obj.success.push(obj.callback);\n            api.load.apply(null, obj.success);\n        }\n        // Do we have a fail case\n        else if (!passed && !!obj.failure) {\n            obj.failure.push(obj.callback);\n            api.load.apply(null, obj.failure);\n        }\n        else {\n            callback();\n        }\n\n        return api;\n    }\n\n    function getAsset(item) {\n        ///<summary>\n        /// Assets are in the form of\n        /// {\n        ///     name : label,\n        ///     url  : url,\n        ///     state: state\n        /// }\n        ///</summary>\n        var asset = {};\n\n        if (typeof item === \"object\") {\n            for (var label in item) {\n                if (!!item[label]) {\n                    asset = {\n                        name: label,\n                        url : item[label]\n                    };\n                }\n            }\n        }\n        else {\n            asset = {\n                name: toLabel(item),\n                url : item\n            };\n        }\n\n        // is the item already existant\n        var existing = assets[asset.name];\n        if (existing && existing.url === asset.url) {\n            return existing;\n        }\n\n        assets[asset.name] = asset;\n        return asset;\n    }\n\n    function allLoaded(items) {\n        items = items || assets;\n\n        for (var name in items) {\n            if (items.hasOwnProperty(name) && items[name].state !== LOADED) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function onPreload(asset) {\n        asset.state = PRELOADED;\n\n        each(asset.onpreload, function (afterPreload) {\n            afterPreload.call();\n        });\n    }\n\n    function preLoad(asset, callback) {\n        if (asset.state === undefined) {\n\n            asset.state     = PRELOADING;\n            asset.onpreload = [];\n\n            loadAsset({ url: asset.url, type: \"cache\" }, function () {\n                onPreload(asset);\n            });\n        }\n    }\n\n    function apiLoadHack() {\n        /// <summary>preload with text/cache hack\n        ///\n        /// head.load(\"http://domain.com/file.js\",\"http://domain.com/file.js\", callBack)\n        /// head.load([\"http://domain.com/file.js\",\"http://domain.com/file.js\"], callBack)\n        /// head.load({ label1: \"http://domain.com/file.js\" }, { label2: \"http://domain.com/file.js\" }, callBack)\n        /// head.load([{ label1: \"http://domain.com/file.js\" }, { label2: \"http://domain.com/file.js\" }], callBack)\n        /// </summary>\n        var args     = arguments,\n            callback = args[args.length - 1],\n            rest     = [].slice.call(args, 1),\n            next     = rest[0];\n\n        if (!isFunction(callback)) {\n            callback = null;\n        }\n\n        // if array, repush as args\n        if (isArray(args[0])) {\n            args[0].push(callback);\n            api.load.apply(null, args[0]);\n\n            return api;\n        }\n\n        // multiple arguments\n        if (!!next) {\n            /* Preload with text/cache hack (not good!)\n             * http://blog.getify.com/on-script-loaders/\n             * http://www.nczonline.net/blog/2010/12/21/thoughts-on-script-loaders/\n             * If caching is not configured correctly on the server, then items could load twice !\n             *************************************************************************************/\n            each(rest, function (item) {\n                // item is not a callback or empty string\n                if (!isFunction(item) && !!item) {\n                    preLoad(getAsset(item));\n                }\n            });\n\n            // execute\n            load(getAsset(args[0]), isFunction(next) ? next : function () {\n                api.load.apply(null, rest);\n            });\n        }\n        else {\n            // single item\n            load(getAsset(args[0]));\n        }\n\n        return api;\n    }\n\n    function apiLoadAsync() {\n        ///<summary>\n        /// simply load and let browser take care of ordering\n        ///\n        /// head.load(\"http://domain.com/file.js\",\"http://domain.com/file.js\", callBack)\n        /// head.load([\"http://domain.com/file.js\",\"http://domain.com/file.js\"], callBack)\n        /// head.load({ label1: \"http://domain.com/file.js\" }, { label2: \"http://domain.com/file.js\" }, callBack)\n        /// head.load([{ label1: \"http://domain.com/file.js\" }, { label2: \"http://domain.com/file.js\" }], callBack)\n        ///</summary>\n        var args     = arguments,\n            callback = args[args.length - 1],\n            items    = {};\n\n        if (!isFunction(callback)) {\n            callback = null;\n        }\n\n        // if array, repush as args\n        if (isArray(args[0])) {\n            args[0].push(callback);\n            api.load.apply(null, args[0]);\n\n            return api;\n        }\n\n        // JRH 262#issuecomment-26288601\n        // First populate the items array.\n        // When allLoaded is called, all items will be populated.\n        // Issue when lazy loaded, the callback can execute early.\n        each(args, function (item, i) {\n            if (item !== callback) {\n                item             = getAsset(item);\n                items[item.name] = item;\n            }\n        });\n\n        each(args, function (item, i) {\n            if (item !== callback) {\n                item = getAsset(item);\n\n                load(item, function () {\n                    if (allLoaded(items)) {\n                        one(callback);\n                    }\n                });\n            }\n        });\n\n        return api;\n    }\n\n    function load(asset, callback) {\n        ///<summary>Used with normal loading logic</summary>\n        callback = callback || noop;\n\n        if (asset.state === LOADED) {\n            callback();\n            return;\n        }\n\n        // INFO: why would we trigger a ready event when its not really loaded yet ?\n        if (asset.state === LOADING) {\n            api.ready(asset.name, callback);\n            return;\n        }\n\n        if (asset.state === PRELOADING) {\n            asset.onpreload.push(function () {\n                load(asset, callback);\n            });\n            return;\n        }\n\n        asset.state = LOADING;\n\n        loadAsset(asset, function () {\n            asset.state = LOADED;\n\n            callback();\n\n            // handlers for this asset\n            each(handlers[asset.name], function (fn) {\n                one(fn);\n            });\n\n            // dom is ready & no assets are queued for loading\n            // INFO: shouldn't we be doing the same test above ?\n            if (isDomReady && allLoaded()) {\n                each(handlers.ALL, function (fn) {\n                    one(fn);\n                });\n            }\n        });\n    }\n\n    function getExtension(url) {\n        url = url || \"\";\n\n        var items = url.split(\"?\")[0].split(\".\");\n        return items[items.length-1].toLowerCase();\n    }\n\n    /* Parts inspired from: https://github.com/cujojs/curl\n    ******************************************************/\n    function loadAsset(asset, callback) {\n        callback = callback || noop;\n\n        function error(event) {\n            event = event || win.event;\n\n            // release event listeners\n            ele.onload = ele.onreadystatechange = ele.onerror = null;\n\n            // do callback\n            callback();\n\n            // need some more detailed error handling here\n        }\n\n        function process(event) {\n            event = event || win.event;\n\n            // IE 7/8 (2 events on 1st load)\n            // 1) event.type = readystatechange, s.readyState = loading\n            // 2) event.type = readystatechange, s.readyState = loaded\n\n            // IE 7/8 (1 event on reload)\n            // 1) event.type = readystatechange, s.readyState = complete\n\n            // event.type === 'readystatechange' && /loaded|complete/.test(s.readyState)\n\n            // IE 9 (3 events on 1st load)\n            // 1) event.type = readystatechange, s.readyState = loading\n            // 2) event.type = readystatechange, s.readyState = loaded\n            // 3) event.type = load            , s.readyState = loaded\n\n            // IE 9 (2 events on reload)\n            // 1) event.type = readystatechange, s.readyState = complete\n            // 2) event.type = load            , s.readyState = complete\n\n            // event.type === 'load'             && /loaded|complete/.test(s.readyState)\n            // event.type === 'readystatechange' && /loaded|complete/.test(s.readyState)\n\n            // IE 10 (3 events on 1st load)\n            // 1) event.type = readystatechange, s.readyState = loading\n            // 2) event.type = load            , s.readyState = complete\n            // 3) event.type = readystatechange, s.readyState = loaded\n\n            // IE 10 (3 events on reload)\n            // 1) event.type = readystatechange, s.readyState = loaded\n            // 2) event.type = load            , s.readyState = complete\n            // 3) event.type = readystatechange, s.readyState = complete\n\n            // event.type === 'load'             && /loaded|complete/.test(s.readyState)\n            // event.type === 'readystatechange' && /complete/.test(s.readyState)\n\n            // Other Browsers (1 event on 1st load)\n            // 1) event.type = load, s.readyState = undefined\n\n            // Other Browsers (1 event on reload)\n            // 1) event.type = load, s.readyState = undefined\n\n            // event.type == 'load' && s.readyState = undefined\n\n            // !doc.documentMode is for IE6/7, IE8+ have documentMode\n            if (event.type === \"load\" || (/loaded|complete/.test(ele.readyState) && (!doc.documentMode || doc.documentMode < 9))) {\n                // remove timeouts\n                win.clearTimeout(asset.errorTimeout);\n                win.clearTimeout(asset.cssTimeout);\n\n                // release event listeners\n                ele.onload = ele.onreadystatechange = ele.onerror = null;\n\n                // do callback   \n                callback();\n            }\n        }\n\n        function isCssLoaded() {\n            // should we test again ? 20 retries = 5secs ..after that, the callback will be triggered by the error handler at 7secs\n            if (asset.state !== LOADED && asset.cssRetries <= 20) {\n\n                // loop through stylesheets\n                for (var i = 0, l = doc.styleSheets.length; i < l; i++) {\n                    // do we have a match ?\n                    // we need to tests agains ele.href and not asset.url, because a local file will be assigned the full http path on a link element\n                    if (doc.styleSheets[i].href === ele.href) {\n                        process({ \"type\": \"load\" });\n                        return;\n                    }\n                }\n\n                // increment & try again\n                asset.cssRetries++;\n                asset.cssTimeout = win.setTimeout(isCssLoaded, 250);\n            }\n        }\n\n        var ele;\n        var ext = getExtension(asset.url);\n\n        if (ext === \"css\") {\n            ele      = doc.createElement(\"link\");\n            ele.type = \"text/\" + (asset.type || \"css\");\n            ele.rel  = \"stylesheet\";\n            ele.href = asset.url;\n\n            /* onload supported for CSS on unsupported browsers\n             * Safari windows 5.1.7, FF < 10\n             */\n\n            // Set counter to zero\n            asset.cssRetries = 0;\n            asset.cssTimeout = win.setTimeout(isCssLoaded, 500);         \n        }\n        else {\n            ele      = doc.createElement(\"script\");\n            ele.type = \"text/\" + (asset.type || \"javascript\");\n            ele.src = asset.url;\n        }\n\n        ele.onload  = ele.onreadystatechange = process;\n        ele.onerror = error;\n\n        /* Good read, but doesn't give much hope !\n         * http://blog.getify.com/on-script-loaders/\n         * http://www.nczonline.net/blog/2010/12/21/thoughts-on-script-loaders/\n         * https://hacks.mozilla.org/2009/06/defer/\n         */\n\n        // ASYNC: load in parallel and execute as soon as possible\n        ele.async = false;\n        // DEFER: load in parallel but maintain execution order\n        ele.defer = false;\n\n        // timout for asset loading\n        asset.errorTimeout = win.setTimeout(function () {\n            error({ type: \"timeout\" });\n        }, 7e3);\n\n        // use insertBefore to keep IE from throwing Operation Aborted (thx Bryan Forbes!)\n        var head = doc.head || doc.getElementsByTagName(\"head\")[0];\n\n        // but insert at end of head, because otherwise if it is a stylesheet, it will not override values      \n        head.insertBefore(ele, head.lastChild);\n    }\n\n    /* Parts inspired from: https://github.com/jrburke/requirejs\n    ************************************************************/\n    function init() {\n        var items = doc.getElementsByTagName(\"script\");\n\n        // look for a script with a data-head-init attribute\n        for (var i = 0, l = items.length; i < l; i++) {\n            var dataMain = items[i].getAttribute(\"data-headjs-load\");\n            if (!!dataMain) {\n                api.load(dataMain);\n                return;\n            }\n        }\n    }\n\n    function ready(key, callback) {\n        ///<summary>\n        /// INFO: use cases:\n        ///    head.ready(callBack);\n        ///    head.ready(document , callBack);\n        ///    head.ready(\"file.js\", callBack);\n        ///    head.ready(\"label\"  , callBack);\n        ///    head.ready([\"label1\", \"label2\"], callback);\n        ///</summary>\n\n        // DOM ready check: head.ready(document, function() { });\n        if (key === doc) {\n            if (isDomReady) {\n                one(callback);\n            }\n            else {\n                domWaiters.push(callback);\n            }\n\n            return api;\n        }\n\n        // shift arguments\n        if (isFunction(key)) {\n            callback = key;\n            key      = \"ALL\"; // holds all callbacks that where added without labels: ready(callBack)\n        }\n\n        // queue all items from key and return. The callback will be executed if all items from key are already loaded.\n        if (isArray(key)) {\n            var items = {};\n\n            each(key, function (item) {\n                items[item] = assets[item];\n\n                api.ready(item, function() {\n                    if (allLoaded(items)) {\n                        one(callback);\n                    }\n                });\n            });\n\n            return api;\n        }\n\n        // make sure arguments are sane\n        if (typeof key !== \"string\" || !isFunction(callback)) {\n            return api;\n        }\n\n        // this can also be called when we trigger events based on filenames & labels\n        var asset = assets[key];\n\n        // item already loaded --> execute and return\n        if (asset && asset.state === LOADED || key === \"ALL\" && allLoaded() && isDomReady) {\n            one(callback);\n            return api;\n        }\n\n        var arr = handlers[key];\n        if (!arr) {\n            arr = handlers[key] = [callback];\n        }\n        else {\n            arr.push(callback);\n        }\n\n        return api;\n    }\n\n    /* Mix of stuff from jQuery & IEContentLoaded\n     * http://dev.w3.org/html5/spec/the-end.html#the-end\n     ***************************************************/\n    function domReady() {\n        // Make sure body exists, at least, in case IE gets a little overzealous (jQuery ticket #5443).\n        if (!doc.body) {\n            // let's not get nasty by setting a timeout too small.. (loop mania guaranteed if assets are queued)\n            win.clearTimeout(api.readyTimeout);\n            api.readyTimeout = win.setTimeout(domReady, 50);\n            return;\n        }\n\n        if (!isDomReady) {\n            isDomReady = true;\n\n            init();\n            each(domWaiters, function (fn) {\n                one(fn);\n            });\n        }\n    }\n\n    function domContentLoaded() {\n        // W3C\n        if (doc.addEventListener) {\n            doc.removeEventListener(\"DOMContentLoaded\", domContentLoaded, false);\n            domReady();\n        }\n\n        // IE\n        else if (doc.readyState === \"complete\") {\n            // we're here because readyState === \"complete\" in oldIE\n            // which is good enough for us to call the dom ready!\n            doc.detachEvent(\"onreadystatechange\", domContentLoaded);\n            domReady();\n        }\n    }\n\n    // Catch cases where ready() is called after the browser event has already occurred.\n    // we once tried to use readyState \"interactive\" here, but it caused issues like the one\n    // discovered by ChrisS here: http://bugs.jquery.com/ticket/12282#comment:15\n    if (doc.readyState === \"complete\") {\n        domReady();\n    }\n\n    // W3C\n    else if (doc.addEventListener) {\n        doc.addEventListener(\"DOMContentLoaded\", domContentLoaded, false);\n\n        // A fallback to window.onload, that will always work\n        win.addEventListener(\"load\", domReady, false);\n    }\n\n    // IE\n    else {\n        // Ensure firing before onload, maybe late but safe also for iframes\n        doc.attachEvent(\"onreadystatechange\", domContentLoaded);\n\n        // A fallback to window.onload, that will always work\n        win.attachEvent(\"onload\", domReady);\n\n        // If IE and not a frame\n        // continually check to see if the document is ready\n        var top = false;\n\n        try {\n            top = !win.frameElement && doc.documentElement;\n        } catch (e) { }\n\n        if (top && top.doScroll) {\n            (function doScrollCheck() {\n                if (!isDomReady) {\n                    try {\n                        // Use the trick by Diego Perini\n                        // http://javascript.nwbox.com/IEContentLoaded/\n                        top.doScroll(\"left\");\n                    } catch (error) {\n                        // let's not get nasty by setting a timeout too small.. (loop mania guaranteed if assets are queued)\n                        win.clearTimeout(api.readyTimeout);\n                        api.readyTimeout = win.setTimeout(doScrollCheck, 50);\n                        return;\n                    }\n\n                    // and execute any waiting functions\n                    domReady();\n                }\n            }());\n        }\n    }\n    //#endregion\n\n    //#region Public Exports\n    // INFO: determine which method to use for loading\n    api.load  = api.js = isAsync ? apiLoadAsync : apiLoadHack;\n    api.test  = conditional;\n    api.ready = ready;\n    //#endregion\n\n    //#region INIT\n    // perform this when DOM is ready\n    api.ready(doc, function () {\n        if (allLoaded()) {\n            each(handlers.ALL, function (callback) {\n                one(callback);\n            });\n        }\n\n        if (api.feature) {\n            api.feature(\"domloaded\", true);\n        }\n    });\n    //#endregion\n}(window));\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.fm = {})));\n}(this, (function (exports) { 'use strict';\n\n  var attach = function () {\n    if (window.clipboardData) {\n      window.onerror = function(message, source, lineno, colno, error) {\n        var errorDiv = document.createElement(\"div\");\n        var title = document.createElement(\"h1\");\n        title.innerHTML = \"Error!\";\n        errorDiv.appendChild(title);\n        var messageP = document.createElement(\"p\");\n        messageP.innerHTML = message;\n        errorDiv.appendChild(messageP);\n        var sourceP = document.createElement(\"p\");\n        var n = source.indexOf(\"#\");\n        source = source.substring(0, n);\n        sourceP.innerHTML = source;\n        errorDiv.appendChild(sourceP);\n\n        var ul = document.createElement(\"ul\");\n        var line = document.createElement(\"li\");\n        line.innerHTML = \"line number: \" + lineno;\n        ul.appendChild(line);\n\n        var col = document.createElement(\"li\");\n        col.innerHTML = \"column number: \" + colno;\n        ul.appendChild(col);\n        errorDiv.appendChild(ul);\n        var body = document.getElementsByTagName(\"body\")[0];\n        errorDiv.setAttribute(\"style\", \"color:red; font-size:small\");\n        body.appendChild(errorDiv);\n      };\n    }\n  };\n\n  /**\n   * Code refactored from Mozilla Developer Network:\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n   */\n\n  function assign(target, firstSource) {\n    var arguments$1 = arguments;\n\n    if (target === undefined || target === null) {\n      throw new TypeError('Cannot convert first argument to object');\n    }\n\n    var to = Object(target);\n    for (var i = 1; i < arguments.length; i++) {\n      var nextSource = arguments$1[i];\n      if (nextSource === undefined || nextSource === null) {\n        continue;\n      }\n\n      var keysArray = Object.keys(Object(nextSource));\n      for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n        var nextKey = keysArray[nextIndex];\n        var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n        if (desc !== undefined && desc.enumerable) {\n          to[nextKey] = nextSource[nextKey];\n        }\n      }\n    }\n    return to;\n  }\n\n  function polyfill() {\n    if (!Object.assign) {\n      Object.defineProperty(Object, 'assign', {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: assign\n      });\n    }\n  }\n\n  var es6ObjectAssign = {\n    assign: assign,\n    polyfill: polyfill\n  };\n  var es6ObjectAssign_2 = es6ObjectAssign.polyfill;\n\n  //attatch a windows error handler to make it easier to see errors on windows\n  attach();\n  es6ObjectAssign_2();\n\n  /**\n   * returns the props attached at startup\n   */\n  var initialProps = (function () {\n    var props = decodeURIComponent(location.hash.substr(1));\n    try {\n      props = JSON.parse(props);\n    } catch (e) {}\n    console.log(\"initialProps\");\n    console.log(props);\n    return props;\n  })();\n\n  /**\n   * @param {string} fileName the name of the file that has the script\n   * @param {string} scriptName the name ofthe script to call\n   * @param {object|string} data an object or string containing the data to send as the parameter\n   */\n  var callFMScript = function (fileName, scriptName, data, callback) {\n    var parameter = encodeURIComponent(data);\n    console.log(\"calling FM script\", scriptName);\n    console.log(\"---->file\", fileName);\n    console.log(\"---->parameter!\", data);\n\n    if (parameter.length > 1000 && window.clipboardData) {\n      window.clipboardData.setData(\"Text\", data);\n      parameter = \"giant\";\n    }\n\n    var url =\n      \"fmp://$/\" + fileName + \"?script=\" + scriptName + \"&param=\" + parameter;\n\n    //window.location = url;\n    var href = window.location.href;\n    var body = document.getElementsByTagName(\"body\")[0];\n    var a = document.createElement(\"a\");\n    a.href = url;\n    a.style.display = \"none\";\n    body.appendChild(a);\n    a.click();\n    a.parentNode.removeChild(a);\n\n    //IE FIX\n    if (href.indexOf(\"#\") > -1) {\n      setTimeout(function() {\n        window.location.href = href;\n      }, 1);\n    }\n  };\n\n  /**\n   * Turns the API on\n   * @param {object} [methods={}] object containing a key for each function to expose\n   */\n  var externalAPI = function (methods) {\n    if ( methods === void 0 ) methods = {};\n\n    var apiListener = function (event) {\n      console.log(\"hash changed\");\n      // eslint-disable-next-line no-restricted-globals\n      var hash = decodeURIComponent(location.hash.substr(1));\n      if (window.clipboardData && hash === \"giant\") {\n        hash = window.clipboardData.getData(\"Text\");\n        hash = hash.substr(1);\n      }\n\n      if (!hash) {\n        console.log(\"----> hash was empty\");\n        return;\n      }\n      //const href = window.location.href;\n\n      window.location.hash = \"\"; // clear this for the next call\n\n      hash = hash.split(\"h^\").join(\"#\");\n      hash = JSON.parse(hash);\n      console.log(hash);\n\n      var functionName = hash.function;\n\n      var parameter = hash.parameter;\n      try {\n        parameter = JSON.parse(parameter);\n      } catch (e) {}\n      var file = hash.callback\n        ? hash.callback.file ? hash.callback.file : \"\"\n        : \"\";\n      var script = hash.callback\n        ? hash.callback.script ? hash.callback.script : \"\"\n        : \"\";\n\n      console.log(\"----> function: \" + functionName);\n      console.log(\"----> parameter:\", parameter);\n      console.log(\"----> callback:\", { file: file, script: script });\n      var result;\n      if (methods[functionName]) {\n        result = methods[functionName](parameter);\n      } else {\n        result = {\n          errorCode: -2,\n          type: \"WebViewerAPI\",\n          descriptor: \"function not found: \" + functionName\n        };\n      }\n\n      var handleResult = function (result) {\n        console.log(\"RESULT\", result);\n        if (script) {\n          if (typeof result === \"string\" || result instanceof String) {\n            //no-op\n          } else {\n            result = JSON.stringify(result);\n          }\n\n          callFMScript(file, script, result);\n        }\n      };\n\n      if (result && result.then && typeof result.then === \"function\") {\n        // the result was a promise\n        return result.then(handleResult);\n      } else {\n        return handleResult(result);\n      }\n    };\n    return {\n      /**\n       * add more methods to the API\n       * @param {object} object an object with keys for each function/method to add\n       */\n      addMethods: function (object) {\n        Object.assign(methods, object);\n      },\n      /**\n       * start the API listening for events on Hash change\n       */\n      start: function () {\n        // eslint-disable-next-line no-restricted-globals\n        console.log(\"webviewer api listening\");\n        window.addEventListener(\"hashchange\", apiListener, false);\n      },\n      /**\n       * remove the listeners\n       */\n      stop: function () {\n        // eslint-disable-next-line no-restricted-globals\n        window.removeEventListener(\"hashchange\", apiListener, false);\n      }\n    };\n  };\n\n  exports.initialProps = initialProps;\n  exports.callFMScript = callFMScript;\n  exports.externalAPI = externalAPI;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n"],"sourceRoot":""}